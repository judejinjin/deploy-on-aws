Exercise 5.3
 Bookmark this page
In this exercise, you will learn how to create a visualization dashboard for the Amazon CloudWatch Logs generated in the previous exercise by using Amazon Elasticsearch Service (Amazon ES) and Kibana. You will create an Amazon ES domain and ingest the logs created by Amazon CloudWatch Logs. Then you will integrate the Amazon ES domain with Kibana, an open-source visualization tool. You will create a dashboard on Kibana to monitor the HTTP status codes 404 and 200 that are generated by the application.

To begin, follow the steps below.

1. Start the TEST-WebServerInstance.
Note If you had stopped the TEST-WebServerInstance in the previous exercise, start the instance by following the instructions in this section. Otherwise, you may skip to the next section. 
In this section, you will start the Amazon EC2 instance by selecting the instance in the EC2 dashboard and clicking Actions -> Instance State -> Start .

Expand for step-by-step instructions.
In the AWS Management Console, click Services, then click EC2 to open the Amazon EC2 dashboard.
In the navigation pane, click Instances. In the list of instances, select the TEST-WebServerInstance instance.
Click Actions -> Instance State -> Start.
When prompted, click Yes, Start. It will take a few minutes for the instance to pass the health checks.
2. Create an Amazon ES domain.
In the console, click Services, then click Elasticsearch Service to open the Amazon ES dashboard.
Click Create a new domain.
For Elasticsearch domain name, type application-logs
Click Next.
On the Configure cluster page, for Instance type, select t2.small.elasticsearch. 
Important Make sure to confirm that the selection is t2.small.elasticsearch. That is the only option which is free-tier eligible. The default selection, m4.large.elasticsearch, is not free-tier eligible.
Leave the rest of the default settings and click Next.
In the Network configuration section, select Public access.
For Set the domain access policy to, select Allow access to the domain from specific IP(s).
On the IP address pop up, type your IP address. You may look up the IP address of your computer here.
Click OK.
Scroll down and click Next.
On the Review page, scroll down and click Confirm. You should see a success message.
In the Overview tab at the bottom, you should see the Domain status as Loading. It will take about 10 minutes for the domain initialization to complete. After the initialization is complete, the Domain status changes to Active.
After the Domain status changes to Active, make a note of the Kibana URL in the Overview tab at the bottom as shown in the screenshot below.

You have successfully created an Amazon ES domain.

3. Integrate Amazon CloudWatch Logs with the Amazon ES domain.
In this section, you will integrate the CloudWatch logs created in the previous exercise with the Amazon ES domain so that the logs are ingested into the Amazon ES domain. Follow the steps below.

In the console, click Services, then click CloudWatch to open the CloudWatch dashboard.
In the left side navigation menu, click Logs.
Click the radio button for the FlaskApp-Frontends-access-log log group.
Click Actions at the top.
Click Stream to Amazon Elasticsearch Service.
For Amazon ES cluster, select application-logs.
For Lambda IAM Execution Role, select Create a new IAM role. A new tab to create the IAM role should appear.
Click Allow at the bottom. The IAM role lambda_elasticsearch_execution should get populated for Lambda IAM Execution Role.
Click Next.
For Log Format, select Other.
For Subscription Filter Pattern, copy and paste the below in the text box:
[remote_addr, delimiter, remote_user, timestamp, request, status, body_bytes_sent, http_referrer, http_user_agent, http_x_forwarded_for]

The filter pattern is used to parse the logs coming from Amazon CloudWatch Logs to a tabular format with columns as specified in the pattern above. Notice that, in the log data, the logs are delimited by a '-' symbol. Refer to the screenshot below. By specifying the filter pattern, you convert the log data to a format as required by Amazon ES.

Click Test Pattern.
Click the Show test results hyperlink. You should see the log data in a tabular format.
Click Next.
On the Review & Start Streaming to Amazon Elasticsearch Service page, click Next.
Click Start Streaming.
You have successfully integrated Amazon CloudWatch Logs with the Amazon ES domain - application-logs. The logs can now be visualized in Kibana.

4. Configure Kibana dashboard to visualize the logs.
In this section, you will configure a dashboard in Kibana to visualize the logs streamed from Amazon CloudWatch Logs into the Amazon ES domain. You will specifically create filters to look for HTTP codes 404 and 200. So, if there are any 404 failures on your website, you will be able to visualize them easily on the Kibana dashboard. Follow the steps below.

Open a browser and paste the Kibana URL you copied in the first section. 
Note If you see an error message, it is likely that the public IP address of your computer is changed by the network VPN. Try accessing the Kibana URL outside of your network VPN. Below are some debugging tips if you face an issue in accessing the Kibana URL.
Can you try accessing the Kibana URL on another network? For example, walk to a coffee shop with internet access. In your new location, modify your Amazon ES policy to allow your new IP address.
Can you try to access the Kibana dashboard from a browser on a Windows EC2 instance? Here is the link to the documentation: https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/EC2_GetStarted.html. To do this, you will need to modify your Amazon ES policy to allow the public IP address of the Windows EC2 instance.
Establish an SSH tunnel to your Cloud9 instance, and modify your Amazon ES policy to allow the public IP address of the Cloud9 instance. Add a public key in your C9 instance at ~/.ssh/authorized_keys. When you establish the tunnel, use a port mapping of 5000:<ES-domain>:80. Now visit http://localhost:5000/_plugins/kibana from your local computer/laptop.
The external Github project https://github.com/abutaha/aws-es-proxy runs on your computer/laptop to proxy and sign requests to Kibana. This will need to be configured with access key credentials.
Advanced: We are using the policy to restrict access to an IP address. Amazon ES also supports Amazon Cognito Authentication for Kibana. This allows you to restrict access to a Cognito identity (instead of the IP address).
Allow open access to the Amazon ES domain. This policy is not recommended for domains with public endpoints. It allows anyone to delete, modify, or access indices in the domain. It is intended only as a convenience for testing. Don't load sensitive data into a domain that uses this setting.
Click Discover on the left side navigation menu of the Kibana web page.
On the Create index pattern page, for Index pattern, type cwl-* 
cwl is the name of the index created by the Amazon ES domain for the Amazon CloudWatch Logs it ingests. By specifying cwl-*, you are configuring Kibana to watch out for logs containing the cwl index.
Click Next step.
For Time Filter field name, select @timestamp.
Click Create index pattern. You should see the log data on the Kibana web page.
In the left side navigation menu of the Kibana website, click Discover. You should see the log data grouped by timestamp.
Paste the IP address of the TEST-WebServerInstance in your web browser. This is the same instance on which you configured the Amazon CloudWatch Logs agent. You should see the application load.
Simulate a few HTTP 404 failures on the application by typing random characters in the application URL. Refer to the screenshot below. The HTTP 404 failures will be logged on the NGINX server, and the CloudWatch agent running on the instance will send these logs to Amazon CloudWatch Logs in your AWS account. Since you have an integration between CloudWatch Logs, the Amazon ES domain, and Kibana, you will be able to visualize the HTTP 404 failures on Kibana. 

Refresh the Kibana web page.
In the search textbox at the top, type status:404 and press ENTER.
You should see the graph refresh with the HTTP 404 failure codes. Hover your mouse over the graph as shown in the screenshot below to see the count. 

To create a saved search for HTTP 404 and 200 codes, type status:404 and status:200 in the search textbox at the top and press ENTER.
Click Save at the top.
For Save Search, type HTTP Status Codes
Click Save.
In the left side navigation menu, click Visualize.
Click Create a visualization.
For Select visualization type, click Vertical Bar.
For Or, From a Saved Search, click HTTP Status Codes as shown in the screenshot below. You should see an empty graph open up. 

At the left side, under Buckets, for Select buckets type, click X-Axis.
For Aggregation, select Date Histogram.
Click the Play button at the top as shown in the screenshot below. You should see the data plotted on the graph with X-Axis as the timestamp and Y-Axis as the count of the HTTP 404 and 200 codes. Hover your mouse over the graph bars to see the value of the count.

To see separate graph bars for HTTP 404 and 200 in the graph, click Add sub buckets at the bottom left side.
Click Split Series.
For Sub Aggregation, select Terms.
For Field, select status.
For Order By, select Term.
Click the Play button. The graph on the right side should now show the data for the HTTP 404 code in a different color from the HTTP 200 code. Hover your mouse over the HTTP 404 bar to see the count specific to HTTP 404 failures.
To change the color of the graph bar for the HTTP 404 code, click the circle as shown in the screenshot below. Select red for the HTTP 404 code. You should see the color of the bar in the graph change to the color you selected.

To save the visualization, click Save at the top.
For Save Visualization, type HTTP Status Codes - Visualization
Click Save.
To create a dashboard, click Dashboard in the left side navigation menu.
Click Create a dashboard.
Click Add.
Select HTTP Status Codes - Visualization as shown in the screenshot below. 

Click Save at the top.
For Title, type WebServer Activity
Click Save. You should see the visualization for HTTP Status Codes - Visualization on the dashboard.
To see more data on the dashboard for HTTP Status Codes - Visualization, go to the application and again simulate a few HTTP 404 failures like you did earlier. You may also play around the with the application to generate HTTP 200 success codes.
Go back to the Kibana webpage and refresh the page. You should see the HTTP 404 and 200 codes plotted in the graph against the corresponding timestamp.
You have successfully integrated Amazon CloudWatch Logs and Amazon ES to visualize log data in Kibana.

5. Revert the infrastructure commit.
In exercise 5.2, you committed an update to allow SSH and added a keypair to your TEST-WebServerInstance. How would you remove this change to the infrastructure? Now that you are treating your infrastructure as code, you can revert the source control change you made in exercise 5.2. The git revert command will create a commit that will reverse the commit created earlier. When this is pushed to the AWS CodeCommit repository, the ci-cd-pipeline will execute and run the reverted AWS CloudFormation template.

In your AWS Cloud9 terminal, run the commands below to revert the commit.
git revert HEAD --no-edit

The git revert command will revert the specified commit. This creates a new commit that will reverse the previous changes. HEAD refers to the most recent commit on the branch. Check the Git log to see the new commit created.
git log

To exit out of the git log command, type q at the terminal.
Push the commit to the dev branch of your remote AWS CodeCommit repository by running the command below. Enter your Git credentials when prompted for your username and password. You may want to see the commit differences by viewing the commit in the AWS CodeCommit console.
git push origin dev

In the AWS Management Console, click Services, then click CodePipeline to open the CodePipeline dashboard.
Click the hyperlink for ci-cd-pipeline. You will see the pipeline execute with your new commit.
After the stage successfully completes, return to the Amazon EC2 console. You will see a new TEST-WebServerInstance that does not have an associated keypair, and the SSH port has been removed from the security group.
You have successfully reversed the infrastructure changes added in exercise 5.2. Your Git repository contains the history or the paper trail of this change for your team members to see.

6. Terminate the Amazon ES domain.
In the console, click Services, then click Elasticsearch Service to open the Amazon ES dashboard.
In the left side navigation menu, click application-logs.
On the application-logs page, click Delete domain.
At the prompt, check the checkbox for Delete the domain application-logs.
Click Delete.
